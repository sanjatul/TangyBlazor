@page "/learnBlazor/bindProp"
<h2 class="text-success">Individual Product</h2>
<div class="row">
<div class="col-6 border p-3">
    <h3 class="text-primary">Product Summary</h3><hr />
    Name: @Product.Name<br />
    @*Available: @Product.IsActive<br/>
    *@Price: @Product.Price<br />
    This product is : @(Product.IsActive ? "Active" : "InActive")<br />
    Property Selected: @seletedProp<br />
    @if (!String.IsNullOrWhiteSpace(seletedProp))
    {
        <p>Property Value: @Product.ProductProperties.FirstOrDefault(u=>u.Key==seletedProp).Value</p>
    }
    <br />
</div>
<div class="col-6 border p-3">
    <h3 class="text-primary">Product Playground</h3><hr />
    <div>
        Active : <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" /><br />
    </div>
    <div>
        New Price:
        <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" />

        @*Works same*@
        @*<input type="number" @bind="@Product.Price" @bind:event="oninput"/>
        *@<br />
    </div>
    <div>
        Product Propertise:
        <select @bind="seletedProp">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>
</div>
<div class="col-12 pt-4">
        <h2 class="text-success">Products table</h2>
        <table class="table table-striped">
            <tbody>
                @foreach (var prod in Products)
                {
                    <tr>
                        <td>
                            <input type="text" @bind-value="prod.Name" @bind-value:event="oninput"/>
                        </td>
                        <td>
                            <input type="number" @bind-value="prod.Price" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":"null")"/>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br/><br/>
        <h2 class="text-success">Products Summary</h2>
        @foreach (var prod in Products)
        {
          <p>@prod.Name [@prod.Price] is @(prod.IsActive?"Active":"InActive")</p>
        }
</div>
</div>
@code {
    private string seletedProp = "";
    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Rose candle",
            Price = 10.99,
            IsActive = true,
            ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp{Id=1,Key="Color",Value="Black" },
                new Demo_ProductProp{Id=2,Key="Flavour",Value="Rose Jasmine" },
                new Demo_ProductProp{Id=3,Key="Size",Value="20oz" },
            }
        };

    List<Demo_Product> Products = new();
    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                Price=13,
                IsActive = false,
                ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                Price=30.13,
                IsActive = true,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }


}
